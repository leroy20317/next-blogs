name: Deploy next blog

on:
  # 手动触发
  workflow_dispatch:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build:
    # 使用ubuntu系统镜像运行自动化脚本
    runs-on: ubuntu-latest

    steps:

      # 切换分支
      - name: Checkout
        uses: actions/checkout@v2

      #      # 下载 git submodule
      #      - uses: srt32/git-actions@v0.0.3
      #        with:
      #          args: git submodule update --init --recursive

      # 使用 node:14
      - name: use Node.js 16
        id: node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

#      # 缓存 node modules
#      - name: Cache node modules
#        uses: actions/cache@v2
#        id: cache
#        env:
#          cache-name: cache-node-modules
#        with:
#          # npm cache files are stored in `~/.npm` on Linux/macOS
#          path: node_modules
#          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
#          restore-keys: |
#            ${{ runner.os }}-build-${{ env.cache-name }}-
#            ${{ runner.os }}-build-
#            ${{ runner.os }}-

      # npm install
      - name: Install Dependencies
        if: steps.node.outputs.cache-hit != 'true'
        run: |
          npm -v
          npm install

      # Create .env
      - name: Create .env
        env:
          ACCESSKEY: ${{ secrets.ACCESSKEY }}
          SECRETKEY: ${{ secrets.SECRETKEY }}
        run: |
          echo ACCESSKEY="$ACCESSKEY" >> .env
          echo SECRETKEY="$SECRETKEY" >> .env
        shell: bash

      # Publish
      - name: Publish
        run: npm run publish

      # tar
      - name: Tar dist
        run: tar zcf build.tar.gz build package.json package-lock.json next.config.js

      # Deploy
      - name: Deploy
        uses: easingthemes/ssh-deploy@v2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.ACCESS_TOKEN_PEM }}
          ARGS: "-avz --delete"
          SOURCE: "build.tar.gz"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: '/wwwroot/next-blogs'

      # 远程Command
      - name: Command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          script: |
            cd /wwwroot/next-blogs
            tar zxf build.tar.gz
            rm build.tar.gz
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            npm i
            pm2 delete next-blogs
            npm run pm2
            echo "Complete!!!"
