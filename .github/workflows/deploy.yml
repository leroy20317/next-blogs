name: Deploy next blog

on:
  # 手动触发
  workflow_dispatch:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
  build:
    # 使用ubuntu系统镜像运行自动化脚本
    runs-on: ubuntu-latest

    steps:
      # 切换分支
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 9
          run_install: false

      # 使用 node:lts/jod
      - name: use Node.js lts/jod
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/jod'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

        # Create .env
      - name: Create .env
        run: |
          echo BUCKET="${{ secrets.BUCKET }}" >> .env
          echo ACCESS_KEY_ID="${{ secrets.ACCESS_KEY_ID }}" >> .env
          echo SECRET_ACCESS_KEY="${{ secrets.SECRET_ACCESS_KEY }}" >> .env
          echo ENDPOINT="${{ secrets.ENDPOINT }}" >> .env
          echo REGION="${{ secrets.REGION }}" >> .env
          echo COMMENT_CLIENT_SECRET="${{ secrets.COMMENT_CLIENT_SECRET }}" >> .env
          echo COMMENT_CLIENT_ID="${{ secrets.COMMENT_CLIENT_ID }}" >> .env
        shell: bash

      # npm install
      - name: Install Dependencies
        run: |
          pnpm -v
          pnpm install

      # build
      - name: Build
        run: pnpm run build

      # tar
      - name: Tar dist
        run: tar zcf build.tar.gz build public package.json .env package-lock.json pnpm-lock.yaml next.config.js

      # Deploy to server
      - name: Deploy to server
        id: deploy
        uses: appleboy/scp-action@v0.1.7
        with:
          #host: "foo.com,bar.com"
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          source: "build.tar.gz"
          target: /wwwroot/next-blogs

      # 远程Command
      - name: Command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.ACCESS_TOKEN }}
          script: |
            cd /wwwroot/next-blogs
            rm -rf build
            tar zxf build.tar.gz
            rm build.tar.gz
            export NVM_DIR=~/.nvm
            source ~/.nvm/nvm.sh
            pnpm i
            pm2 stop next-blogs
            pm2 delete next-blogs
            npm run pm2
            pm2 save
            echo "Complete!!!"
